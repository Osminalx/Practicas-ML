version()
instal.packages("lenguageserver")
install.packages("lenguageserver")
q()
q()
setwd("~/Documentos/5to semestre/Machine learning/Practica 3")
lin.reg <- read.csv("wine.csv")
str(lin.reg)
lin.reg.test = read.csv("wine_test.csv")
str(lin.reg.test)
str(lin.reg)
#Gráfico del set de datos
plot(lin.reg)
modelo.reg.lin.0 = lm(Price ~ AGST, data=lin.reg)
modelo.reg.lin.1 = lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop,data = lin.reg)
modelo.reg.lin.2 = lm(Price ~ AGST + HarvestRain, data = lin.reg)
summary(modelo.reg.lin.0)
summary(modelo.reg.lin.1)
summary(modelo.reg.lin.2)
#Grafica de correlación
plot(lin.reg$AGST,lin.reg$Price)
plot(lin.reg$HarvestRain,lin.reg$Price)
#Predicciones
predicciones0 = predict(modelo.reg.lin.0, newdata = lin.reg.test)
predicciones1 = predict(modelo.reg.lin.1, newdata = lin.reg.test)
predicciones2 = predict(modelo.reg.lin.2, newdata = lin.reg.test)
predicciones0
predicciones1
predicciones2
cor(predicciones0,lin.reg.test$Price)
cor(predicciones0,lin.reg.test$Price)
cor(predicciones1,lin.reg.test$Price)
cor(predicciones2,lin.reg.test$Price)
cor(predicciones0,lin.reg.test$Price)
cor(predicciones1,lin.reg.test$Price)
cor(predicciones2,lin.reg.test$Price)
#set de datos
str(lin.reg)
modelo.reg.lin.3 = lm(Price ~ AGST + HarvestRain + Age + FrancePop,data = lin.reg)
summary(modelo.reg.lin.3)
modelo.reg.lin.3 = lm(Price ~ AGST + HarvestRain + Age,data = lin.reg)
summary(modelo.reg.lin.3)
log.reg <- read.csv("quality.csv")
str(log.reg)
#Regresión lógistica
set.seed(88)
split = sample.split(log.reg$PoorCare,SplitRatio = .75)
log.reg <- read.csv("quality.csv")
str(log.reg)
#Regresión lógistica
set.seed(88)
split = sample.split(log.reg$PoorCare,SplitRatio = .75)
library(caTools)
log.reg <- read.csv("quality.csv")
str(log.reg)
#Regresión lógistica
set.seed(88)
split = sample.split(log.reg$PoorCare,SplitRatio = .75)
log.train = subset(log.reg,split==T)
log.test = subset(log.reg,split==F)
modelo.reg.log.1 = glm(PoorCare ~ OfficeVisits + Narcotics,data = log.train,family = binomial)
summary(modelo.reg.log.1)
#modelo
modelo.reg.log.1 = glm(PoorCare ~ OfficeVisits + Narcotics,data = log.train,family = binomial)
summary(modelo.reg.log.1)
#Predicciones
predict.train.log = predict(modelo.reg.log.1,newdata = log.train,type = 'response')
tapply(predict.train.log, log.train$PoorCar
tapply(predict.train.log, log.train$PoorCare,mean)
tapply(predict.train.log,log.train$PoorCare,mean)
predict.log= predict(modelo.reg.log.1, newdata = log.test,type='response')
table(log.test$PoorCare,predict.log > .5)
